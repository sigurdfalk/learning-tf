trigger:
  batch: true
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

stages:
  - stage: Terraform
    jobs:
      - job: ApplyTFConfig
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: GoTool@0
            inputs:
              version: '1.13.5'
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                GO111MODULE="off" go get github.com/segmentio/terraform-docs@v0.8.2
                echo $GOPATH
                terraform-docs markdown .
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '0.12.20'
          - task: TerraformTaskV1@0
            inputs:
              command: 'init'
              provider: 'azurerm'
              backendServiceArm: '$(azure_subscription)'
              backendAzureRmResourceGroupName: 'tfstate'
              backendAzureRmStorageAccountName: 'tfstate71ac2932'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV1@0
            inputs:
              command: 'plan'
              provider: 'azurerm'
              environmentServiceNameAzureRM: '$(azure_subscription)'
              commandOptions: >-
                -var a_strong_pw='$(a_strong_pw)'
                -input=false
          - task: TerraformTaskV1@0
            inputs:
              command: 'apply'
              provider: 'azurerm'
              environmentServiceNameAzureRM: '$(azure_subscription)'
              commandOptions: >-
                -var a_strong_pw='$(a_strong_pw)'
                -input=false